<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.4.xsd">
                          
	<var name="order" class="com.packt.webstore.domain.Order" />
	<var name="address" class="com.packt.webstore.domain.Address"/>
	<action-state id="addCartToOrder">
		<evaluate expression="catServiceImpl.validate(requestParameters.cartId)" result="order.cart" />
		<transition to="InvalidCartWarning" on-exception="com.packt.webstore.exception.InvalidCartException"/>
		<transition to="customerEmail" />
	</action-state>
	<action-state id="customerEmail">
		<evaluate expression="customerServiceImpl.getUserName(requestParameters.username)" result="order.customer.email"/>
		<transition to="checkCustomerExist" />
	</action-state>	
	<decision-state id="checkCustomerExist">
		<if test="customerServiceImpl.isCustomerExist(order.customer.email)"
		then="getAddress"
		else="collectCustomerInfo"/>
	</decision-state>
	<action-state id="getAddress">
		<evaluate expression="customerServiceImpl.getCustomerByEmail(order.customer.email)" result="order.customer"/>
		<transition to="collectShippingDetail"/>
	</action-state>
	<view-state id="collectCustomerInfo" model="order">
		<transition on = "customerInfoCollected" to="saveAddress"/>
	</view-state>
	<action-state id="saveAddress">
		<evaluate expression="addressServiceImpl.saveAddress(order.customer.billingAddress)"/>
		<transition to="saveCustomer"/>
	</action-state>
	<action-state id="saveCustomer">
		<evaluate expression="customerServiceImpl.saveCustomer(order.customer)"/>
		<transition to="collectShippingDetail"/>
	</action-state>
	<view-state id="collectShippingDetail" model="order">
		<transition on ="shippingDetailCollected" to="orderConfirmation"/>
		<transition on="backToCollectCustomerInfo" to="collectCustomerInfo" />	
	</view-state>
	<view-state id="orderConfirmation" model="order">
		<transition on="orderConfirmed" to="processOrder" />
		<transition on="backToCollectShippingDetail" to="collectShippingDetail" />
	</view-state>
	<action-state id="processOrder">
		<evaluate expression="orderServiceImpl.saveOrder(order)" result="order.orderId" />
		<transition to="thankCustomer" />
	</action-state>
	<view-state id="InvalidCartWarning" model="order">
		<transition to="endState"/>
	</view-state>
	<view-state id="thankCustomer" model ="order">
		<transition to="endState"/>
	</view-state>
	<end-state id="endState"/>
	<end-state id="cancelCheckout" view="checkOutCancelled"/>
	<global-transitions>
		<transition on="cancel" to="cancelCheckout"/>
	</global-transitions>
</flow>